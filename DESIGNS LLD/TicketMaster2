BookMySHow ->

events - music, comedy, movies 
user should be able to browse and select a particular events 
user should be able to select a seat 
user should be able to pay securely 
receive a notification on his device

User 
Events 
Venue 
Ticket 
BookMySHowManager 
Seat 

enum class EventType{MOVIE,COMEDY,HORROR,SUSPENSE};
class User{
    int id;
    string name;
    string email;
    void DisplayUserInfo(){

    }
};
class Event{
    int eventid;
    string eventname;
    Venue* venue;
    EventType type;
    vector<Seat*>seats;
    string date;
};
class Venue{
    int venueid;
    string venueLocation;
    string venueName;
    vector<Seat>seats;
    Venue(int id,string location,string name,int numSeats):venueid(id),venueLocation(location),venueName(name){
        for(int i=0;i<numSeats;i++){
            seats.emplace_back();
        }
    }
};
class Seat{
    int seatid;
    int row;
    bool isAvailable;
    int seatNumber;

    bool bookSeat(){
        if(isAvailable)
        return true;
    }
    return false;

    void freeSeat(){
        isAvailable=true;
    }
};
class Ticket{
    int ticketid;
    double price;
    Seat* seat;
    Venue * venue;
    Event* event;
    User*user;
}
class BookMySHowManager{
    vector<Event>events;
    unordered_map<int,Ticket>activeTickets;
    void addEvents(Event&event){
        events.push_back(event);
    }
    Ticket* bookAnEvent(int eventid,int seat_id,User*user,double price){
        for(auto &event:events){
            if(event->eventid==eventid){
                for(auto &seat:event.seats){
                    if(seat->seatid==seat_id){
                        seat->bookSeat();
                        Ticket*ticket=new Ticket(id++,price,seat,event->venue,event,user);
                        activeTickets[ticket->ticket_id]=ticket;
                        Notification::notifyUser(user);
                        return ticket;
                    }
                }
            }
        }
        return nullptr;
    } 
};
class Notification{
    // Ticket*ticket;
    void notifyUser(User*user;){
        cout<<"Ticket send on email"<<user.email;
    }
};
int main(){
    BookMySHowManager mgr;
    User user=new User(100,"Alice","aliceinwonderland.com");
    Venue venue=new Venue(201,"Soul spirit","green glen",50);
    Event event=new Event(103,EventType::MOVIE);

    mgr.addEvents(&event);
    Ticket*ticket=mgr.bookAnEvent();
    if(ticket){
        ticket->printTicket();
    }
}
