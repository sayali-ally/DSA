A constructor is a member function of a class, that has the same name as the class name. It can have parameters or not.
It is called whenever an instance of a class is created. 
There can be many constructors in a class
example:
#include<iostream>
using namespace std;
class Car{
    public:
        string brand;
        int speed;

//this constructor gets called automatically when object is created.
        Car(string b,int s){
            brand=b;
            speed=s;
            cout<<"car object created";
        }

        void show(){
            cout<<"Brand:"<<brand<<" "<<"Speed:"<<speed;
        }
};
int main(){
    Car mycar("Tesla",200);   //constructor is called automatically
    mycar.show();
    return 0;
}



DESTRUCTORS
A destructor is a member function of a class , that has the same name as the class name preceding with a ~
It helps to deallocate the memory of an object.
it is called when the object of the class is freed or deleted.
In a class there is always a single desctructor without any parameters.

#include<iostream>
using namespace std;
class Car{
    public:
        Car(){
            cout<<"Car object created";
        }

        ~Car(){
            cout<<"Car object destroyed";
        }
};
int main(){
    Car myCar; //constructor called automatically 
    cout<<"Inside main function";
    return 0; //destructor called when myCar goes out of scope.
}

output:
Car object created
inside main function 
Car object destroyed
