class Solution {
public:
    void dfs(vector<vector<int>>&adj,vector<bool>&vis,int curr){
        vis[curr]=true;
        for(auto it:adj[curr]){
            if(!vis[it]){
                dfs(adj,vis,it);
            }
        }
    }
    int findCircleNum(vector<vector<int>>& grid) {
        int n=grid.size();
        vector<vector<int>>adj(n,vector<int>(n,0));
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1){
                    adj[i].push_back(j);
                    adj[j].push_back(i);
                }
            }
        }
        vector<bool>vis(n,0);
        int count=0;
        for(int i=0;i<n;i++){
            if(!vis[i]){
                dfs(adj,vis,i);
                count++;
            }
        }
        return count;
    }
};
