1.take a queue and a visited vector
2. push start node in queue and mark visited of that node as true
3. while q is not empty
4. take the front ele, remove it
5. tranverse the adj list of front ele
6. if not vis- visi and push in queue 

class Solution {
  public:
    // Function to return Breadth First Traversal of given graph.
    vector<int> bfsOfGraph(vector<vector<int>> &adj) {
        int n=adj.size();
        vector<bool>vis(n,false);
        queue<int>q;
        int start=0;
        q.push(start);
        vis[start]=true;
        vector<int>ans;
        ans.push_back(0);
        while(!q.empty()){
            int curr=q.front();
            q.pop();
            for(int i:adj[curr]){
                if(!vis[i]){
                    vis[i]=true;
                    q.push(i);
                    ans.push_back(i);
                }
            }
        }
        return ans;
    }
};

