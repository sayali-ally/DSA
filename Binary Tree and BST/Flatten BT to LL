/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* dfs(TreeNode*root){
        if(root==NULL)return NULL;
        TreeNode* leftt=dfs(root->left);
        TreeNode* rightt=dfs(root->right);

        if(leftt!=NULL){
            TreeNode*temp=root->right;
            root->right=root->left;
            leftt->right=temp;
            root->left=NULL;
        }
        if(rightt){
            return rightt;
        }
        if(leftt){
            return leftt;
        }
        return root;
    }
    void flatten(TreeNode* root) {
        dfs(root);
    }
};
