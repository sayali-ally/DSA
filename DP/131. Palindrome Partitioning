class Solution {
public:
    bool isP(string s){
        int n=s.size();
        int l=0;
        int r=n-1;
        while(l<r){
            if(s[l++]!=s[r--]){
                return false;
            }
        }
        return true;
    }
    void func(string s,vector<vector<string>>&res,vector<string>&vec){
        if(s.size()==0) res.push_back(vec);
        for(int i=0;i<s.size();i++){
            string r=s.substr(0,i+1);
            if(isP(r)){
                vec.push_back(r);
                func(s.substr(i+1),res,vec);
                vec.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>>res;
        vector<string>vec;
        func(s,res,vec);
        return res;
    }
};



// aab 
// a a b
