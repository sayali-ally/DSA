BFS in graph 

//bfs from a given source 
void bfs(vector<vector<int>>&adj,int src){
    int n=adj.size();
    vector<bool>vis(n,false);
    queue<int>q;
    q.push(src);
    vis[src]=true;

    while(!q.empty()){
        int a=q.front();
        q.pop();
        cout<<a<<" ";

        for(auto i:adj[a]){
            if(!vis[i]){
                vis[i]=true;
                q.push(i);
            }
        }
    }
}
void addEdge(vector<vector<int>>&adj,int u,int v){
    adj[u].push_back(v);
    adj[v].push_back(u);
}
Time complexity- O(V+E)
space complexity- O(V)



DFS in graph
void dfsUtil(vector<vector<int>>&adj,int u,vector<bool>&vis){
    vis[u]=true;
    for(auto i:adj[u]){
        if(!vis[i]){
            dfsUtil(adj,i);
        }
    }
}
void dfs(vector<vector<int>>&adj){
    int n=adj.size();
    vector<bool>vis(n,false);
    for(int i=0;i<n;i++){
        if(!vis[i]){
            dfsUtil(adj,i,vis);
        }
    }
}
void addEdge(vector<vector<int>>&adj,int u,int v){
    adj[u].push_back(v);
    adj[v].push_back(u);
}

time complexity-O(V+E)
space- O(V)


